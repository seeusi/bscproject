Variables:
File uploaded = “uploadedfile”
Check box for header = “dataheader”
Picker for data separator = "datasep"
Picker for data quotations = "dataquote"
Picker for data display = "datadisp"

Tabs
a. Data, outputid = "datatable"
b. One-way, plotoutputid = "onewayplot"
    Output picker, inputid = "selectoutput"
c. Two-way, plotoutputid = "twowayplot"
d. Summary, outputid = "datasummary"
    Download button, outputid = "downloadplots"

Server variables
reactive = "reactivedata"

Library for items
1. Shiny
2. Shiny widgets: pickerinput (selecting data separator)
3. grDevices: download plots

  reactivedata <- reactive({
    if (is.null(inFile$datapath)) {
      dat <- read.csv("path/to/your.csv")
      values$file_name = "your.csv"
      values$file_type = "csv"
      values$file_size = file.size("path/to/your.csv")
      values$file_path = "path/to/your.csv"
    } else {
      dat <- read.csv(inFile$datapath)
      values$file_name = inFile$name
      values$file_size = inFile$size
      values$file_type = inFile$type
      values$file_path = inFile$datapath
    }
  })
  
  
    # input$uploadedfile is NULL initially
    inFile <- input$uploadedfile
    
    if (!is.null(inFile)){
      # when reading semicolon separated files,
      # having a comma separator causes `read.csv` to error
      tryCatch(
        {
          df <- read.csv(input$uploadedfile$datapath,
                         header = input$dataheader,
                         sep = input$datasep,
                         quote = input$dataquote)
        },
        error = function(e) {
          # return a safeError if a parsing error occurs
          stop(safeError(e))
        }
      )
    }
    else {
      originaldata
    }
  })